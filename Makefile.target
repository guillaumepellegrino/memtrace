MACHINE?=$(shell $(CC) -dumpmachine)
GIT_VERSION:=$(shell git describe --all)
CC_SYSROOT:=$(shell $(CC) -print-sysroot)
BUILDTGT?=build-$(MACHINE)
O?=$(BUILDTGT)
CROSS_COMPILE?=
CC?=$(CROSS_COMPILE)cc
CFLAGS+=-g -O2 -fPIC -pthread \
	-Wall -Wextra -Werror \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-Wno-missing-braces \
	-D_DEFAULT_SOURCE -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -std=gnu99 \
	-Iinclude \
	-DVERSION=\"$(GIT_VERSION)\" \
	-DSYSROOT=\"$(CC_SYSROOT)\" \
	-DCOMPILER=\"$(CC)\"
LDFLAGS+=-pthread
# Do not enforce -Wl,-z,relro,-z,now
# It results in issues during library injection
STRIPLDFLAGS=-Wl,-z,relro,-z,now
LDFLAGS:=$(filter-out $(STRIPLDFLAGS),$(LDFLAGS))
DESTDIR?=/

TARGETS=$(addprefix $(O)/,memtrace libmemtrace-agent.so dummy)

ifneq (,$(findstring x86_64,$(MACHINE)))
ARCH_OBJECT=x86_64.o
endif

ifneq (,$(findstring arm,$(MACHINE)))
CFLAGS+=
ARCH_OBJECT=arm.o
endif

ifneq (,$(findstring aarch64,$(MACHINE)))
CFLAGS+=
ARCH_OBJECT=aarch64.o
endif

ifneq (,$(findstring mips,$(MACHINE)))
CFLAGS+=
ARCH_OBJECT=mips.o
endif

all: $(TARGETS)

install:
	install -m 755 -d $(DESTDIR)/usr/bin
	install -m 755 -d $(DESTDIR)/usr/lib
	install -m 755 $(O)/memtrace $(DESTDIR)/usr/bin
	install -m 755 $(O)/dummy $(DESTDIR)/usr/bin
	install -m 755 $(O)/libmemtrace-agent.so $(DESTDIR)/usr/lib
	install -m 755 scripts/memtrace-endurance $(DESTDIR)/usr/bin

$(O)/:
	mkdir -p $(O)/

$(O)/memtrace: $(addprefix $(O)/,memtrace.o threads.o evlp.o bus.o net.o strlist.o strmap.o inject.o syscall.o syscall_table.o ptrace.o hashmap.o libraries.o log.o elf.o elf_file.o elf_sym.o elf_relocate.o elf_dynamic.o console.o coredump.o breakpoint.o memfd.o selftest.o process.o symcache.o $(ARCH_OBJECT))
	$(CC) -o $(@) $(^) $(LDFLAGS)

$(O)/libmemtrace-agent.so: $(addprefix $(O)/,agent.o agent_hooks.o threads.o evlp.o bus.o net.o strlist.o strmap.o inject.o syscall.o syscall_table.o ptrace.o hashmap.o libraries.o log.o elf.o elf_file.o elf_sym.o elf_relocate.o elf_dynamic.o console.o coredump.o memfd.o symcache.o $(ARCH_OBJECT))
	$(CC) -shared -o $(@) $(^) $(LDFLAGS)

$(O)/dummy: $(O)/dummy.o
	$(CC) -o $(@) $(^) $(LDFLAGS) -ldl

-include $(wildcard $(O)/*.d)

$(O)/%.o: src/%.c | $(O)/
	$(CC) -c -MD $(CFLAGS) $(<) -o $(@)

$(O)/libcext.o: src/libcext.c | $(O)/
	$(CC) -c -MD $(CFLAGS) -fno-tree-pre $(<) -o $(@)

clean:
	rm -rf $(O)/

.PHONY: all clean
